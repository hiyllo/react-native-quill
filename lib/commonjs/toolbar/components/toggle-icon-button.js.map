{"version":3,"sources":["toggle-icon-button.tsx"],"names":["ToggleIconButton","props","apply","isSelected","theme","styles","name","valueOff","valueOn","source","selected","handlePresss","defaultStyles","makeStyles","toolStyle","selection","iconToggle","tool","overlayStyle","overlay","imageStyle","image","StyleSheet","create","absoluteFillObject","backgroundColor","borderRadius","alignItems","justifyContent","padding","marginRight","marginLeft","height","Math","round","size","width","tintColor","color","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  TouchableWithoutFeedback,\n  View,\n  Image,\n  StyleSheet,\n  ImageSourcePropType,\n} from 'react-native';\nimport type { ToolbarTheme } from '../../types';\nimport { useToolbar } from './toolbar-context';\n\ninterface Props {\n  name: string;\n  valueOn: string | number | boolean;\n  valueOff: string | number | boolean;\n  source: ImageSourcePropType;\n}\n\nexport const ToggleIconButton: React.FC<Props> = (props) => {\n  const { apply, isSelected, theme, styles } = useToolbar();\n  const { name, valueOff, valueOn, source } = props;\n  const selected = isSelected(name, valueOn);\n  const handlePresss = () => apply(name, selected ? valueOff : valueOn);\n  const defaultStyles = makeStyles(theme);\n  const toolStyle = styles?.selection?.iconToggle?.tool\n    ? styles.selection.iconToggle.tool(defaultStyles.tool)\n    : defaultStyles.tool;\n  const overlayStyle = styles?.selection?.iconToggle?.overlay\n    ? styles.selection.iconToggle.overlay(defaultStyles.overlay)\n    : defaultStyles.overlay;\n  const imageStyle = styles?.selection?.iconToggle?.image\n    ? styles.selection.iconToggle.image(defaultStyles.image)\n    : defaultStyles.image;\n  return (\n    <TouchableWithoutFeedback onPress={handlePresss}>\n      <View style={toolStyle}>\n        <Image source={source} style={imageStyle} />\n        {selected && <View style={overlayStyle} />}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst makeStyles = (theme: ToolbarTheme) =>\n  StyleSheet.create({\n    overlay: {\n      ...StyleSheet.absoluteFillObject,\n      backgroundColor: theme.overlay,\n      borderRadius: 3,\n    },\n    tool: {\n      borderRadius: 3,\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 2,\n      marginRight: 4,\n      marginLeft: 4,\n      height: Math.round(theme.size),\n      width: Math.round(theme.size),\n    },\n    image: {\n      height: Math.round(theme.size * 0.6),\n      width: Math.round(theme.size * 0.6),\n      tintColor: theme.color,\n    },\n  });\n\nToggleIconButton.defaultProps = {\n  valueOff: false,\n};\n"]}